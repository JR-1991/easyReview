version: '3'
name: easyreview-app
services:
  easyreview-frontend:
    build: ./frontend
    image: easyreview-frontend:latest
    container_name: easyreview-frontend
    restart: always
    ports:
      - 3000:3000
    env_file: .env
    depends_on:
      - easyreview-backend
      - redis
      - postgres
    volumes:
      - ${PWD}/frontend:/app

  easyreview-backend:
    build: ./backend
    image: easyreview-backend:latest
    container_name: easyreview-backend
    restart: always
    command: >
      sh -c "python manage.py makemigrations reviews &&
             python manage.py migrate &&
             python manage.py ensure_adminuser --no-input &&
             python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - ${PWD}/backend:/app
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    env_file: .env
    ports:
      - 5430:5432
    volumes:
      - ${PWD}/_data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis
    restart: always
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - ${PWD}/_data/redis:/var/lib/redis

  celery:
    build: ./backend
    image: easyreview-celery:latest
    container_name: easyreview-celery
    restart: always
    command:
      [
        'celery',
        '-A',
        'app',
        'worker',
        '-c',
        '1',
        '-l',
        'INFO',
        '--without-heartbeat',
        '--without-gossip',
        '--without-mingle',
      ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
      - DJANGO_WSGI=app.wsgi
      - DEBUG=False
    volumes:
      - ${PWD}/backend:/app
    depends_on:
      - postgres
      - redis

networks:
  default:
